/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.locotodevteam.mojixmapping.main;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.json.JSONObject;
import org.json.XML;

/**
 *
 * @author Locoto
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaInputCreateJson = new javax.swing.JTextArea();
        btnClick = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaOutputCreateJson = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaCamelCaseInput = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaCamelCaseOutput = new javax.swing.JTextArea();
        btnToCamelCase = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtAreaXmlToJsonInput = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtAreaXmlToJsonOutput = new javax.swing.JTextArea();
        btnConvertXmlToJson = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtAreaHtmlText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtAreaInputCreateJson.setColumns(20);
        txtAreaInputCreateJson.setRows(5);
        jScrollPane2.setViewportView(txtAreaInputCreateJson);

        btnClick.setText("Create Json");
        btnClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClickActionPerformed(evt);
            }
        });

        txtAreaOutputCreateJson.setColumns(20);
        txtAreaOutputCreateJson.setRows(5);
        jScrollPane3.setViewportView(txtAreaOutputCreateJson);

        jLabel1.setText("Create JSON given data type and names");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(btnClick)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnClick)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("JSON", jPanel1);

        txtAreaCamelCaseInput.setColumns(20);
        txtAreaCamelCaseInput.setRows(5);
        jScrollPane1.setViewportView(txtAreaCamelCaseInput);

        jLabel2.setText("Convierte tus cadenas en formato Camel Case");

        txtAreaCamelCaseOutput.setColumns(20);
        txtAreaCamelCaseOutput.setRows(5);
        jScrollPane4.setViewportView(txtAreaCamelCaseOutput);

        btnToCamelCase.setText("Convertir");
        btnToCamelCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToCamelCaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(jLabel2)
                        .addGap(50, 50, 50)
                        .addComponent(btnToCamelCase)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnToCamelCase))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("CamelCase", jPanel2);

        txtAreaXmlToJsonInput.setColumns(20);
        txtAreaXmlToJsonInput.setRows(5);
        jScrollPane5.setViewportView(txtAreaXmlToJsonInput);

        jLabel3.setText("XML To JSON");

        txtAreaXmlToJsonOutput.setColumns(20);
        txtAreaXmlToJsonOutput.setRows(5);
        jScrollPane6.setViewportView(txtAreaXmlToJsonOutput);

        btnConvertXmlToJson.setText("Convertir a Json");
        btnConvertXmlToJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertXmlToJsonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(440, 440, 440)
                        .addComponent(jLabel3)))
                .addGap(64, 64, 64)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConvertXmlToJson)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnConvertXmlToJson))
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("xml to Json", jPanel3);

        jButton1.setText("Select a file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtAreaHtmlText.setColumns(20);
        txtAreaHtmlText.setRows(5);
        jScrollPane7.setViewportView(txtAreaHtmlText);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(442, 442, 442)
                        .addComponent(jButton1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 912, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("HTML fields", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConvertXmlToJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertXmlToJsonActionPerformed
        String myData = this.txtAreaXmlToJsonInput.getText();
        JSONObject json = XML.toJSONObject(myData);
        String jsonStr = json.toString();
        this.txtAreaXmlToJsonOutput.setText(jsonStr);
    }//GEN-LAST:event_btnConvertXmlToJsonActionPerformed

    private void btnToCamelCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToCamelCaseActionPerformed
        String[] myData = this.txtAreaCamelCaseInput.getText().split("\n");
        String ans = "";
        for(String cad: myData){
            if(cad.isEmpty()) continue;
            StringBuilder current = new StringBuilder(cad);
            current.setCharAt(0, Character.toLowerCase(cad.charAt(0)));
            int found = current.indexOf(".");
            while(found != -1){
                current.setCharAt(found+1, Character.toLowerCase(current.charAt(found+1)));
                found = current.indexOf(".", found +1);
            }
            ans += current + "\n";
        }
        this.txtAreaCamelCaseOutput.setText(ans);
    }//GEN-LAST:event_btnToCamelCaseActionPerformed

    private void btnClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClickActionPerformed
        String myData = this.txtAreaInputCreateJson.getText();
        Long count = myData.chars().filter(ch -> ch == '\n').count();
        String[] data = myData.split("\n", count.intValue());
        HashMap<String, Integer> visited = new HashMap<String, Integer>();
        String ans = "{\n";
        Long countNested = 0L, oldCountNested = 0L;
        Boolean firstRun = true;
        for (String cad : data) {
            String type = cad.substring(0, cad.indexOf("	"));
            String field = cad.substring(cad.indexOf("	") + 1, cad.length());
            countNested = field.chars().filter(ch -> ch == '.').count();
            int found = field.indexOf(".");
            String father = found != -1 ? field.substring(0, found) : field;
            String grandfather = "";
            while (found != -1) {
                grandfather = father;
                visited.put(father, visited.getOrDefault(father, 0) + 1);
                if (visited.get(father) != null && visited.get(father) == 1) {
                    break;
                }
                int offset = field.indexOf(".", found + 1) - found - 1;
                // TODO: cad.substring(found + 1, cad.indexOf(".", found +1) not working as expected
                    father = field.indexOf(".", found +1) != -1 ? field.substring(found + 1, field.indexOf(".", found +1)) : field.substring(found +1, field.length());
                    found = field.indexOf(".", found + 1);
                }
                String item = !grandfather.isEmpty() ? field.substring(field.lastIndexOf(".")+1, field.length()) : field;
                if (visited.get(grandfather) != null && visited.get(grandfather) == 1) {
                    ans += countNested != oldCountNested && !firstRun ? "}, \n" : "";
                    ans += "\"" + grandfather + "\": {\n";
                    firstRun = false;
                }
                oldCountNested = countNested;
                ans += createJson(type, item) + "\n";
            }
            ans += "}\n";
            this.txtAreaOutputCreateJson.setText(ans);
    }//GEN-LAST:event_btnClickActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int response = fileChooser.showOpenDialog(null); // if zero then the user has choose a file else cancel button pressed
        if(response == JFileChooser.APPROVE_OPTION) {
            Scanner scan = null;
            FileInputStream inputStream = null;
            try {
                String path = fileChooser.getSelectedFile().getAbsolutePath();
                File myFile = new File(path);
                inputStream = new FileInputStream(myFile);
                scan = new Scanner(inputStream, "UTF-8");
                String data = "";
                while(scan.hasNextLine()){
                    String curr = scan.nextLine();
                    if(curr.contains("data-xpath=")){
                        String clean = curr.substring(0, curr.indexOf("\" data-pattern"));
                        String cleaner = clean.substring(clean.indexOf("xpath=\"") + 7);
                        data += cleaner.replace("/", ".") + "\n";
                    }
                }
            this.txtAreaHtmlText.setText(data);
            } catch( FileNotFoundException e) {
                System.out.println("No se pudo leer el arhcivo");
                e.printStackTrace();
            } finally {
                if(scan != null) scan.close();
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    String createJson(String type, String field) {
        if ("string".equals(type)) {
            return  "\"" + field + "\": \"hola\",";
        } else if ("integer".equals(type)) {
            return  "\"" + field + "\": 100," ;
        } else if ("number".equals(type)) {
            return "\"" + field + "\": 3.141516,";
        } else if ("boolean".equals(type)) {
            return "\"" + field + "\": true,";
        } else if ("datetime".equals(type) || "date".equals(type)) {
        } else {
            return "\"" + field + "\": \"hola\",";
        }
        return "whatHappened??";
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClick;
    private javax.swing.JButton btnConvertXmlToJson;
    private javax.swing.JButton btnToCamelCase;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea txtAreaCamelCaseInput;
    private javax.swing.JTextArea txtAreaCamelCaseOutput;
    private javax.swing.JTextArea txtAreaHtmlText;
    private javax.swing.JTextArea txtAreaInputCreateJson;
    private javax.swing.JTextArea txtAreaOutputCreateJson;
    private javax.swing.JTextArea txtAreaXmlToJsonInput;
    private javax.swing.JTextArea txtAreaXmlToJsonOutput;
    // End of variables declaration//GEN-END:variables
}
